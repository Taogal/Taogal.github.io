<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Taogal</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-20T09:24:46.777Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Taogal</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>FFmpeg生成王境泽真香gif</title>
    <link href="http://yoursite.com/2018/05/20/gif-wangjingze/"/>
    <id>http://yoursite.com/2018/05/20/gif-wangjingze/</id>
    <published>2018-05-20T08:20:27.351Z</published>
    <updated>2018-05-20T09:24:46.777Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a><strong>配置文件</strong></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ cat config.json</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">``` bash</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"first_str"</span> :<span class="string">"我Taogal就算是饿死"</span>,</span><br><span class="line"><span class="string">"second_str"</span>:<span class="string">"从这跳下去"</span>,</span><br><span class="line"><span class="string">"third_str"</span> :<span class="string">"也不会吃你们一口东西"</span>,</span><br><span class="line"><span class="string">"forth_str"</span> :<span class="string">"真香"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="字幕文件"><a href="#字幕文件" class="headerlink" title="字幕文件"></a><strong>字幕文件</strong></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat template.ass</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[V4+ Styles]</span><br><span class="line">Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding</span><br><span class="line">Style: sorry,WenQuanYi Micro Hei,38,&amp;H00FFFFFF,&amp;H000000FF,&amp;H00000000,&amp;H00000000,0,0,0,0,100,100,0,0,1,1.2,0.6,2,5,5,5,1</span><br><span class="line"></span><br><span class="line">[Events]</span><br><span class="line">Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text</span><br><span class="line">Dialogue: 0,0:00:00.00,0:00:01.04,sorry,,0,0,0,,&lt;?=[0]=?&gt;</span><br><span class="line">Dialogue: 0,0:00:01.46,0:00:02.90,sorry,,0,0,0,,&lt;?=[1]=?&gt;</span><br><span class="line">Dialogue: 0,0:00:03.09,0:00:04.33,sorry,,0,0,0,,&lt;?=[2]=?&gt;</span><br><span class="line">Dialogue: 0,0:00:04.59,0:00:05.93,sorry,,0,0,0,,&lt;?=[3]=?&gt;</span><br></pre></td></tr></table></figure><h2 id="python处理程序"><a href="#python处理程序" class="headerlink" title="python处理程序"></a><strong>python处理程序</strong></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat wangjingze.py</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line">import sys</span><br><span class="line">import getopt </span><br><span class="line">import os</span><br><span class="line">import json</span><br><span class="line"></span><br><span class="line">def parse_config_file(argv):</span><br><span class="line">str_list = []</span><br><span class="line">json_file = open(argv, encoding=<span class="string">'utf-8'</span>)  </span><br><span class="line">setting = json.load(json_file)</span><br><span class="line">str_list.append(setting[<span class="string">'first_str'</span>])  </span><br><span class="line">str_list.append(setting[<span class="string">'second_str'</span>]) </span><br><span class="line">str_list.append(setting[<span class="string">'third_str'</span>]) </span><br><span class="line">str_list.append(setting[<span class="string">'forth_str'</span>]) </span><br><span class="line"><span class="built_in">print</span> (str_list)</span><br><span class="line"><span class="built_in">return</span> str_list</span><br><span class="line"></span><br><span class="line">def write_to_file(argv,i,old_str,new_str):</span><br><span class="line">source_file  = open(argv,<span class="string">'r+'</span>)</span><br><span class="line">tmp_file  = open(argv+<span class="string">'.tmp'</span>,<span class="string">'w'</span>)</span><br><span class="line"><span class="built_in">print</span>(i)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> source_file.readlines():</span><br><span class="line">tmp_file.writelines(line.replace(old_str,new_str))</span><br><span class="line">source_file.close()</span><br><span class="line">tmp_file.close()</span><br><span class="line"></span><br><span class="line">def set_ass_file(argv,list_ass):</span><br><span class="line">source_file  = open(argv,<span class="string">'r+'</span>)</span><br><span class="line">old_list_ass = [<span class="string">'&lt;?=[0]=?&gt;'</span>, <span class="string">'&lt;?=[1]=?&gt;'</span>,<span class="string">'&lt;?=[2]=?&gt;'</span>,<span class="string">'&lt;?=[3]=?&gt;'</span>]</span><br><span class="line">tmp_file  = open(argv+<span class="string">'.tmp'</span>,<span class="string">'w'</span>,encoding=<span class="string">'utf-8'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> source_file.readlines():</span><br><span class="line">line = line.replace(old_list_ass[0],list_ass[0])</span><br><span class="line">line = line.replace(old_list_ass[1],list_ass[1])</span><br><span class="line">line = line.replace(old_list_ass[2],list_ass[2])</span><br><span class="line">line = line.replace(old_list_ass[3],list_ass[3])</span><br><span class="line">tmp_file.writelines(line)</span><br><span class="line"></span><br><span class="line">tmp_file.close()</span><br><span class="line">source_file.close()</span><br><span class="line"></span><br><span class="line">def main(argv):</span><br><span class="line">video_file = <span class="string">''</span></span><br><span class="line">output_file = <span class="string">''</span></span><br><span class="line">ass_file = <span class="string">''</span></span><br><span class="line">config_file = <span class="string">''</span></span><br><span class="line">try:</span><br><span class="line">opts, args = getopt.getopt(argv,<span class="string">"hi:a:c:o:"</span>,[<span class="string">"ifile="</span>,<span class="string">"afile="</span>,<span class="string">"cfile="</span>,<span class="string">"ofile="</span>])</span><br><span class="line">except getopt.GetoptError:</span><br><span class="line"><span class="built_in">print</span> (<span class="string">"wangjingze.py -i &lt;video_file&gt; -a &lt;ass_file&gt; -c &lt;config_file&gt; -o &lt;output_file&gt;"</span>)</span><br><span class="line">sys.exit(2)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> opt, arg <span class="keyword">in</span> opts:</span><br><span class="line"><span class="keyword">if</span> opt == <span class="string">'-h'</span>:</span><br><span class="line"><span class="built_in">print</span> (<span class="string">"wangjingze.py -i &lt;video_file&gt; -a &lt;ass_file&gt; -c &lt;config_file&gt; -o &lt;output_file&gt;"</span>)</span><br><span class="line">sys.exit()</span><br><span class="line"><span class="keyword">elif</span> opt <span class="keyword">in</span> (<span class="string">"-i"</span>, <span class="string">"--ifile"</span>):</span><br><span class="line">video_file = arg</span><br><span class="line"><span class="keyword">elif</span> opt <span class="keyword">in</span> (<span class="string">"-a"</span>, <span class="string">"--afile"</span>):</span><br><span class="line">ass_file = arg</span><br><span class="line"><span class="keyword">elif</span> opt <span class="keyword">in</span> (<span class="string">"-c"</span>, <span class="string">"--cfile"</span>):</span><br><span class="line">config_file = arg</span><br><span class="line"><span class="keyword">elif</span> opt <span class="keyword">in</span> (<span class="string">"-o"</span>, <span class="string">"--ofile"</span>):</span><br><span class="line">output_file = arg</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> (video_file)</span><br><span class="line"><span class="built_in">print</span> (ass_file)</span><br><span class="line"><span class="built_in">print</span> (config_file)</span><br><span class="line"><span class="built_in">print</span> (output_file)</span><br><span class="line"></span><br><span class="line">ffmpeg_str = <span class="string">'ffmpeg -y -i &#123;video_file&#125; -vf "ass=&#123;ass_file&#125;.tmp" &#123;output_file&#125;'</span></span><br><span class="line"></span><br><span class="line">ffmpeg_cmd = (ffmpeg_str).format(video_file=video_file,ass_file=ass_file,output_file=output_file)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> (ffmpeg_cmd)</span><br><span class="line"></span><br><span class="line">list_ass = parse_config_file(config_file)</span><br><span class="line"></span><br><span class="line">set_ass_file(ass_file,list_ass)</span><br><span class="line"></span><br><span class="line">os.system(ffmpeg_cmd)</span><br><span class="line"></span><br><span class="line">os.remove(ass_file+<span class="string">'.tmp'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main(sys.argv[1:])</span><br></pre></td></tr></table></figure><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a><strong>效果</strong></h2><p>You just run the follow shell:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python wangjingze.py -i template.mp4 -a template.ass -c config.json -o wangjingze.gif</span><br></pre></td></tr></table></figure><p>处理最终生成的结果：<br><img src="/2018/05/20/gif-wangjingze/wangjingze.gif" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;配置文件&quot;&gt;&lt;a href=&quot;#配置文件&quot; class=&quot;headerlink&quot; title=&quot;配置文件&quot;&gt;&lt;/a&gt;&lt;strong&gt;配置文件&lt;/strong&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl
      
    
    </summary>
    
      <category term="ffmpeg" scheme="http://yoursite.com/categories/ffmpeg/"/>
    
    
      <category term="音视频" scheme="http://yoursite.com/tags/%E9%9F%B3%E8%A7%86%E9%A2%91/"/>
    
  </entry>
  
  <entry>
    <title>音视频的基本概念</title>
    <link href="http://yoursite.com/2018/05/10/base-concept/"/>
    <id>http://yoursite.com/2018/05/10/base-concept/</id>
    <published>2018-05-10T02:28:52.226Z</published>
    <updated>2018-05-10T04:14:38.226Z</updated>
    
    <content type="html"><![CDATA[<h1 id="比特率"><a href="#比特率" class="headerlink" title="比特率"></a><strong>比特率</strong></h1><p>比特率，英文为 bit rate，描述每秒钟输出多少 KB 的参数，单位是 Kbps，也就是 kbit/s，8Kbit/s = 1KB/s。也就是说800Kbps意思就是每秒视频就要占用100KB磁盘空间。对于音频文件也存在比特率，同理。<br>压缩同一个视频，视频编码率越大，文件体积越大。视频编码率越大，画质越好，马赛克越少。MP3一般使用的比特率为 8~320kbps。</p><h2 id="可变码率"><a href="#可变码率" class="headerlink" title="可变码率"></a>可变码率</h2><p>可变码率，英文为 Variable Bitrate (VBR)，VBR 指的是编码器的输出码率可以根据编码器输入源信号的复杂度自适应调整，目的是为了达到输出质量保持不变。VBR 适用于存储，不太适用流式传输，可以更有效的地利用有限空间。</p><h2 id="固定码率"><a href="#固定码率" class="headerlink" title="固定码率"></a>固定码率</h2><p>固定码率，英文为Constant Bitrate (CBR)，CBR 指的是编码器输出码率固定，CBR 不适合存储，CBR 对于复杂内容可能没有足够码率进行编码，从而导致质量下降，同时会在简单内容部分浪费一些码率。</p><h1 id="帧数"><a href="#帧数" class="headerlink" title="帧数"></a><strong>帧数</strong></h1><p>每秒钟播放的图片数，单位 fps（英文：Frames Per Second），每秒的帧数或者帧率表示视频文件或者图形处理器场景时每秒钟能够更新的次数。<br>高的帧率可以得到更流畅、更逼真的动画。一般来说30fps就是可以接受的，但是将性能提升至60fps则可以明显提升交互感和逼真感，但是一般来说超过75fps一般就不容易察觉到有明显的流畅度提升了。如果帧率超过屏幕刷新率只会浪费图形处理的能力，因为显示器不能以这么快的速度更新，这样超过刷新率的帧率就浪费掉了。在同一视频，同一码率的情况下，帧数越大，则画质越不好。尤其是运动的画面。因为每张画面会分担每秒有限的文件体积，如果画面越多，那么每张画面所能表现的内容就越有限。<br>当画面的FPS达到60帧/秒时，已经能满足绝大部分应用需求。一般情况下，如果能够保证游戏画面的平均FPS能够达到30帧/秒，那么画面已经基本流畅；能够达到50帧/秒，就基本可以体会到行云流水的感觉了。一般人很难分辨出60 帧/秒与100帧/秒有什么不同。</p><h1 id="分辨率"><a href="#分辨率" class="headerlink" title="分辨率"></a><strong>分辨率</strong></h1><p>最好理解的概念了，表示画面的大小，单位是像素 px。<br>和编码率的关系：越高的分辨率，需要越高的编码率，因为图像的细节多了，需要的文件体积也应该增大，否则还不如画面小一些，你会发现同一码率，画面越大，图像的马赛克程度越明显。</p><h1 id="采样率"><a href="#采样率" class="headerlink" title="采样率"></a><strong>采样率</strong></h1><p> 每秒钟对音频信号的采样次数，采样频率越高声音还原度越高，声音更加自然。单位是赫兹 Hz。音频文件一般使用的采样率是 44100 Hz ，也就是一秒钟采样 44100 次，之所以使用这个数值是因为经过了反复实验，人们发现这个采样精度最合适，低于这个值就会有较明显的损失，而高于这个值人的耳朵已经很难分辨，而且增大了数字音频所占用的空间。我们所使用的CD的采样标准就是44.1k，目前44.1k还是一个最通行的标准。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;比特率&quot;&gt;&lt;a href=&quot;#比特率&quot; class=&quot;headerlink&quot; title=&quot;比特率&quot;&gt;&lt;/a&gt;&lt;strong&gt;比特率&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;比特率，英文为 bit rate，描述每秒钟输出多少 KB 的参数，单位是 Kbps，也就是 kb
      
    
    </summary>
    
      <category term="ffmpeg" scheme="http://yoursite.com/categories/ffmpeg/"/>
    
    
      <category term="音视频" scheme="http://yoursite.com/tags/%E9%9F%B3%E8%A7%86%E9%A2%91/"/>
    
  </entry>
  
  <entry>
    <title>How to use Hexo?</title>
    <link href="http://yoursite.com/2018/04/14/hello-world/"/>
    <id>http://yoursite.com/2018/04/14/hello-world/</id>
    <published>2018-04-14T15:32:20.360Z</published>
    <updated>2018-05-10T13:57:39.003Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Clean-static-files"><a href="#Clean-static-files" class="headerlink" title="Clean static files"></a>Clean static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a><br>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><h2 id="Shell-deploy-in-local"><a href="#Shell-deploy-in-local" class="headerlink" title="Shell deploy in local"></a>Shell deploy in local</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat local_hexo.sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"----------------------------------------"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"clean..."</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"genrate..."</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"run server..."</span></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>You just run the shell ./local_hexo.sh and login in the browser with the <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
